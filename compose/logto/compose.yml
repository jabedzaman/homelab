services:
  logto:
    image: svhd/logto:${TAG-latest}
    container_name: logto
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    # uncomment the following line to seed the database on first run
    # entrypoint: ["sh", "-c", "npm run cli db seed -- --swe && npm start"]
    entrypoint: ["sh", "-c", "npm start"]
    env_file:
      - ./logto.env
    labels:
      - "traefik.enable=true"

      # OIDC Service Router (port 3001)
      - "traefik.http.routers.logto-oidc.entrypoints=https"
      - "traefik.http.routers.logto-oidc.rule=Host(`oidc.jabed.dev`)"
      - "traefik.http.routers.logto-oidc.tls=true"
      - "traefik.http.routers.logto-oidc.tls.certresolver=production"
      - "traefik.http.routers.logto-oidc.service=logto-oidc"
      - "traefik.http.services.logto-oidc.loadbalancer.server.port=3001"

      # Admin Interface Router (port 3002)
      - "traefik.http.routers.logto-admin.entrypoints=https"
      - "traefik.http.routers.logto-admin.rule=Host(`logto.jabed.dev`)"
      - "traefik.http.routers.logto-admin.tls=true"
      - "traefik.http.routers.logto-admin.tls.certresolver=production"
      - "traefik.http.routers.logto-admin.service=logto-admin"
      - "traefik.http.services.logto-admin.loadbalancer.server.port=3002"
